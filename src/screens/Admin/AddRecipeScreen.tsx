import React from 'react';
import { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet } from 'react-native';

const AddRecipeScreen = () => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Th√™m C√¥ng Th·ª©c M·ªõi</Text>
      
      <ScrollView style={styles.content}>
        <View style={styles.form}>
          <View style={styles.inputGroup}>
            <Text style={styles.label}>T√™n m√≥n ƒÉn *</Text>
            <TextInput
              style={styles.input}
              placeholder="Nh·∫≠p t√™n m√≥n ƒÉn"
              placeholderTextColor="#999"
            />
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>M√¥ t·∫£ ng·∫Øn</Text>
            <TextInput
              style={[styles.input, styles.textArea]}
              placeholder="M√¥ t·∫£ ng·∫Øn v·ªÅ m√≥n ƒÉn..."
              placeholderTextColor="#999"
              multiline
              numberOfLines={3}
            />
          </View>
          
          <View style={styles.row}>
            <View style={[styles.inputGroup, styles.halfWidth]}>
              <Text style={styles.label}>Th·ªùi gian n·∫•u (ph√∫t)</Text>
              <TextInput
                style={styles.input}
                placeholder="60"
                placeholderTextColor="#999"
                keyboardType="numeric"
              />
            </View>
            
            <View style={[styles.inputGroup, styles.halfWidth]}>
              <Text style={styles.label}>S·ªë ng∆∞·ªùi ƒÉn</Text>
              <TextInput
                style={styles.input}
                placeholder="4"
                placeholderTextColor="#999"
                keyboardType="numeric"
              />
            </View>
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>ƒê·ªô kh√≥</Text>
            <View style={styles.difficultyContainer}>
              <TouchableOpacity style={[styles.difficultyButton, styles.selectedDifficulty]}>
                <Text style={[styles.difficultyText, styles.selectedDifficultyText]}>D·ªÖ</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.difficultyButton}>
                <Text style={styles.difficultyText}>Trung b√¨nh</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.difficultyButton}>
                <Text style={styles.difficultyText}>Kh√≥</Text>
              </TouchableOpacity>
            </View>
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>Nguy√™n li·ªáu *</Text>
            <TextInput
              style={[styles.input, styles.textArea]}
              placeholder="M·ªói nguy√™n li·ªáu m·ªôt d√≤ng&#10;V√≠ d·ª•:&#10;‚Ä¢ 500g th·ªãt b√≤&#10;‚Ä¢ 2 c·ªß h√†nh t√¢y&#10;‚Ä¢ 1 th√¨a mu·ªëi"
              placeholderTextColor="#999"
              multiline
              numberOfLines={6}
            />
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>C√°ch l√†m *</Text>
            <TextInput
              style={[styles.input, styles.textArea]}
              placeholder="M·ªói b∆∞·ªõc m·ªôt d√≤ng&#10;V√≠ d·ª•:&#10;B∆∞·ªõc 1: S∆° ch·∫ø nguy√™n li·ªáu...&#10;B∆∞·ªõc 2: ∆Ø·ªõp th·ªãt v·ªõi gia v·ªã...&#10;B∆∞·ªõc 3: N·∫•u n∆∞·ªõc d√πng..."
              placeholderTextColor="#999"
              multiline
              numberOfLines={8}
            />
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>L·ªùi khuy√™n</Text>
            <TextInput
              style={[styles.input, styles.textArea]}
              placeholder="Nh·ªØng l·ªùi khuy√™n h·ªØu √≠ch khi l√†m m√≥n n√†y..."
              placeholderTextColor="#999"
              multiline
              numberOfLines={4}
            />
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>Danh m·ª•c</Text>
            <View style={styles.categoryContainer}>
              <TouchableOpacity style={[styles.categoryButton, styles.selectedCategory]}>
                <Text style={[styles.categoryText, styles.selectedCategoryText]}>M√≥n ch√≠nh</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.categoryButton}>
                <Text style={styles.categoryText}>M√≥n ph·ª•</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.categoryButton}>
                <Text style={styles.categoryText}>Tr√°ng mi·ªáng</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.categoryButton}>
                <Text style={styles.categoryText}>ƒê·ªì u·ªëng</Text>
              </TouchableOpacity>
            </View>
          </View>
          
          <View style={styles.inputGroup}>
            <Text style={styles.label}>·∫¢nh m√≥n ƒÉn</Text>
            <TouchableOpacity style={styles.imageUploadButton}>
              <Text style={styles.imageUploadText}>üì∑ Ch·ªçn ·∫£nh</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
      
      <View style={styles.actionButtons}>
        <TouchableOpacity style={styles.saveButton}>
          <Text style={styles.saveButtonText}>L∆∞u c√¥ng th·ª©c</Text>
        </TouchableOpacity>
        
        <TouchableOpacity style={styles.cancelButton}>
          <Text style={styles.cancelButtonText}>H·ªßy</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFFFFF',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
    padding: 20,
    color: '#333333',
  },
  content: {
    flex: 1,
    paddingHorizontal: 20,
  },
  form: {
    paddingBottom: 20,
  },
  inputGroup: {
    marginBottom: 20,
  },
  label: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333333',
    marginBottom: 8,
  },
  input: {
    borderWidth: 1,
    borderColor: '#E0E0E0',
    borderRadius: 8,
    padding: 12,
    fontSize: 16,
    backgroundColor: '#F8F8F8',
  },
  textArea: {
    height: 100,
    textAlignVertical: 'top',
  },
  row: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    gap: 12,
  },
  halfWidth: {
    flex: 1,
  },
  difficultyContainer: {
    flexDirection: 'row',
    gap: 8,
  },
  difficultyButton: {
    flex: 1,
    paddingVertical: 12,
    paddingHorizontal: 16,
    borderRadius: 8,
    backgroundColor: '#F8F8F8',
    borderWidth: 1,
    borderColor: '#E0E0E0',
    alignItems: 'center',
  },
  selectedDifficulty: {
    backgroundColor: '#FF6B6B',
    borderColor: '#FF6B6B',
  },
  difficultyText: {
    fontSize: 14,
    color: '#666666',
  },
  selectedDifficultyText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  categoryContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 8,
  },
  categoryButton: {
    paddingVertical: 8,
    paddingHorizontal: 16,
    borderRadius: 16,
    backgroundColor: '#F8F8F8',
    borderWidth: 1,
    borderColor: '#E0E0E0',
  },
  selectedCategory: {
    backgroundColor: '#FF6B6B',
    borderColor: '#FF6B6B',
  },
  categoryText: {
    fontSize: 14,
    color: '#666666',
  },
  selectedCategoryText: {
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  imageUploadButton: {
    borderWidth: 2,
    borderColor: '#E0E0E0',
    borderStyle: 'dashed',
    borderRadius: 8,
    padding: 40,
    alignItems: 'center',
    backgroundColor: '#FAFAFA',
  },
  imageUploadText: {
    fontSize: 16,
    color: '#666666',
  },
  actionButtons: {
    padding: 20,
    gap: 12,
  },
  saveButton: {
    backgroundColor: '#FF6B6B',
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
  },
  saveButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
  cancelButton: {
    backgroundColor: 'transparent',
    padding: 15,
    borderRadius: 8,
    alignItems: 'center',
    borderWidth: 1,
    borderColor: '#E0E0E0',
  },
  cancelButtonText: {
    color: '#666666',
    fontSize: 16,
  },
});

export default AddRecipeScreen;
