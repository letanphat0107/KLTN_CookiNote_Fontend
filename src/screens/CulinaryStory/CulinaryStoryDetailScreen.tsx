import React, { useState } from "react";
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  Image,
  Share,
  Animated,
} from "react-native";
import { culinaryStoryStyles } from "./styles";

interface CulinaryStoryDetailScreenProps {
  route?: {
    params?: {
      storyId?: string;
    };
  };
  navigation?: any;
}

const CulinaryStoryDetailScreen: React.FC<CulinaryStoryDetailScreenProps> = ({
  route,
  navigation,
}) => {
  const storyId = route?.params?.storyId;
  const [isLiked, setIsLiked] = useState(false);
  const [likeCount, setLikeCount] = useState(124);

  // Toast message state
  const [toastMessage, setToastMessage] = useState("");
  const [showToast, setShowToast] = useState(false);
  const toastOpacity = useState(new Animated.Value(0))[0];

  // Mock detailed story data
  const storyDetail = {
    id: parseInt(storyId || "1"),
    title: "Kh√°m ph√° vƒÉn h√≥a ·∫©m th·ª±c Vi·ªát Nam",
    fullContent: `
·∫®m th·ª±c Vi·ªát Nam l√† m·ªôt ph·∫ßn kh√¥ng th·ªÉ t√°ch r·ªùi kh·ªèi vƒÉn h√≥a v√† l·ªãch s·ª≠ d√¢n t·ªôc. T·ª´ nh·ªØng m√≥n ƒÉn ƒë∆°n gi·∫£n trong gia ƒë√¨nh ƒë·∫øn nh·ªØng ƒë·∫∑c s·∫£n v√πng mi·ªÅn, m·ªói m√≥n ƒÉn ƒë·ªÅu mang trong m√¨nh m·ªôt c√¢u chuy·ªán ri√™ng.

**Ngu·ªìn g·ªëc v√† ph√°t tri·ªÉn**

·∫®m th·ª±c Vi·ªát Nam ƒë∆∞·ª£c h√¨nh th√†nh qua h√†ng ngh√¨n nƒÉm l·ªãch s·ª≠, ch·ªãu ·∫£nh h∆∞·ªüng t·ª´ nhi·ªÅu n·ªÅn vƒÉn h√≥a kh√°c nhau nh∆∞ng v·∫´n gi·ªØ ƒë∆∞·ª£c n√©t ƒë·∫∑c tr∆∞ng ri√™ng. T·ª´ th·ªùi c·ªï ƒë·∫°i, ng∆∞·ªùi Vi·ªát ƒë√£ bi·∫øt c√°ch ch·∫ø bi·∫øn c√°c m√≥n ƒÉn t·ª´ g·∫°o, rau c·ªß v√† th·ªãt c√°.

**ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t**

- **C√¢n b·∫±ng dinh d∆∞·ª°ng**: M·ªói b·ªØa ƒÉn Vi·ªát Nam th∆∞·ªùng c√≥ ƒë·∫ßy ƒë·ªß ch·∫•t ƒë·∫°m, tinh b·ªôt, vitamin t·ª´ rau xanh
- **H∆∞∆°ng v·ªã h√†i h√≤a**: S·ª± k·∫øt h·ª£p tinh t·∫ø gi·ªØa ng·ªçt, chua, cay, m·∫∑n
- **Nguy√™n li·ªáu t∆∞∆°i ngon**: ∆Øu ti√™n s·ª≠ d·ª•ng nguy√™n li·ªáu t∆∞∆°i, theo m√πa
- **C√°ch ch·∫ø bi·∫øn ƒëa d·∫°ng**: Lu·ªôc, n∆∞·ªõng, x√†o, canh, g·ªèi...

**M√≥n ƒÉn ƒë·∫∑c tr∆∞ng**

Ph·ªü, b√°nh m√¨, b√∫n b√≤ Hu·∫ø, b√°nh x√®o, g·ªèi cu·ªën... m·ªói m√≥n ƒë·ªÅu c√≥ c√°ch ch·∫ø bi·∫øn v√† th∆∞·ªüng th·ª©c ri√™ng bi·ªát, ph·∫£n √°nh vƒÉn h√≥a ·∫©m th·ª±c phong ph√∫ c·ªßa t·ª´ng v√πng mi·ªÅn.

**Gi√° tr·ªã vƒÉn h√≥a**

·∫®m th·ª±c kh√¥ng ch·ªâ l√† vi·ªác ƒÉn u·ªëng m√† c√≤n l√† c√°ch th·ªÉ hi·ªán t√¨nh c·∫£m, s·ª± t√¥n tr·ªçng v√† k·∫øt n·ªëi con ng∆∞·ªùi. B·ªØa c∆°m gia ƒë√¨nh, nh·ªØng bu·ªïi ti·ªác t·∫øt, hay ƒë∆°n gi·∫£n l√† m·ªùi kh√°ch u·ªëng tr√† ƒë·ªÅu mang √Ω nghƒ©a vƒÉn h√≥a s√¢u s·∫Øc.
    `,
    category: "culture",
    author: {
      name: "Chef Minh",
      avatar:
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_2BWz0CukYGFT9pvza-w6su7smU_xUkoEOg&s",
      bio: "ƒê·∫ßu b·∫øp chuy√™n nghi·ªáp v·ªõi 15 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c ·∫©m th·ª±c Vi·ªát Nam",
      followers: "2.1K",
    },
    publishDate: "2 ng√†y tr∆∞·ªõc",
    readTime: "5 ph√∫t ƒë·ªçc",
    image:
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_2BWz0CukYGFT9pvza-w6su7smU_xUkoEOg&s",
    tags: ["VƒÉn h√≥a", "·∫®m th·ª±c Vi·ªát", "Truy·ªÅn th·ªëng", "L·ªãch s·ª≠"],
    viewCount: 1234,
    shareCount: 89,
  };

  const relatedStories = [
    {
      id: 2,
      title: "B√≠ quy·∫øt n·∫•u ƒÉn t·ª´ c√°c ƒë·∫ßu b·∫øp chuy√™n nghi·ªáp",
      image:
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_2BWz0CukYGFT9pvza-w6su7smU_xUkoEOg&s",
      readTime: "3 ph√∫t ƒë·ªçc",
    },
    {
      id: 3,
      title: "H√†nh tr√¨nh kh√°m ph√° m√≥n ƒÉn ƒë·ªãa ph∆∞∆°ng",
      image:
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_2BWz0CukYGFT9pvza-w6su7smU_xUkoEOg&s",
      readTime: "4 ph√∫t ƒë·ªçc",
    },
  ];

  // Toast functions
  const showToastMessage = (message: string, duration: number = 2000) => {
    setToastMessage(message);
    setShowToast(true);

    Animated.timing(toastOpacity, {
      toValue: 1,
      duration: 300,
      useNativeDriver: true,
    }).start();

    setTimeout(() => {
      Animated.timing(toastOpacity, {
        toValue: 0,
        duration: 300,
        useNativeDriver: true,
      }).start(() => {
        setShowToast(false);
      });
    }, duration);
  };

  const handleBack = () => {
    if (navigation) {
      navigation.goBack();
    }
  };

  const handleLike = () => {
    setIsLiked(!isLiked);
    setLikeCount((prev) => (isLiked ? prev - 1 : prev + 1));
    showToastMessage(isLiked ? "ƒê√£ b·ªè th√≠ch" : "ƒê√£ th√≠ch b√†i vi·∫øt!");
  };

  const handleShare = async () => {
    try {
      await Share.share({
        message: `ƒê·ªçc b√†i vi·∫øt hay: "${storyDetail.title}" tr√™n CookiNote`,
        url: `https://cookinote.app/story/${storyId}`,
      });
    } catch (error) {
      showToastMessage("Kh√¥ng th·ªÉ chia s·∫ª b√†i vi·∫øt");
    }
  };

  const handleFollowAuthor = () => {
    showToastMessage(`ƒê√£ theo d√µi ${storyDetail.author.name}!`);
  };

  const handleRelatedStoryPress = (id: number) => {
    if (navigation) {
      navigation.push("CulinaryStoryDetail", { storyId: id.toString() });
    }
  };

  return (
    <View style={culinaryStoryStyles.detailContainer}>
      {/* Toast Message */}
      {showToast && (
        <Animated.View
          style={[
            culinaryStoryStyles.toastContainer,
            { opacity: toastOpacity },
          ]}
        >
          <Text style={culinaryStoryStyles.toastText}>{toastMessage}</Text>
        </Animated.View>
      )}

      {/* Header */}
      <View style={culinaryStoryStyles.detailHeader}>
        <TouchableOpacity
          onPress={handleBack}
          style={culinaryStoryStyles.backButton}
        >
          <Image
            source={require("../../../assets/images/vector.png")}
            style={culinaryStoryStyles.backIcon}
            resizeMode="contain"
          />
        </TouchableOpacity>
        <Text style={culinaryStoryStyles.detailHeaderTitle}>Chi ti·∫øt</Text>
        <TouchableOpacity
          onPress={handleShare}
          style={culinaryStoryStyles.shareHeaderButton}
        >
          <Text style={culinaryStoryStyles.shareHeaderText}>üì§</Text>
        </TouchableOpacity>
      </View>

      <ScrollView
        style={culinaryStoryStyles.detailContent}
        showsVerticalScrollIndicator={false}
      >
        {/* Story Image */}
        <Image
          source={{ uri: storyDetail.image }}
          style={culinaryStoryStyles.detailImage}
        />

        {/* Story Info */}
        <View style={culinaryStoryStyles.detailInfo}>
          {/* Category & Read Time */}
          <View style={culinaryStoryStyles.detailMeta}>
            <View style={culinaryStoryStyles.categoryBadge}>
              <Text style={culinaryStoryStyles.categoryBadgeText}>VƒÉn h√≥a</Text>
            </View>
            <Text style={culinaryStoryStyles.readTime}>
              üìñ {storyDetail.readTime}
            </Text>
          </View>

          {/* Title */}
          <Text style={culinaryStoryStyles.detailTitle}>
            {storyDetail.title}
          </Text>

          {/* Stats */}
          <View style={culinaryStoryStyles.statsContainer}>
            <Text style={culinaryStoryStyles.statItem}>
              üëÅÔ∏è {storyDetail.viewCount}
            </Text>
            <Text style={culinaryStoryStyles.statItem}>‚ù§Ô∏è {likeCount}</Text>
            <Text style={culinaryStoryStyles.statItem}>
              üì§ {storyDetail.shareCount}
            </Text>
          </View>

          {/* Author Info */}
          <View style={culinaryStoryStyles.authorSection}>
            <Image
              source={{ uri: storyDetail.author.avatar }}
              style={culinaryStoryStyles.authorAvatar}
            />
            <View style={culinaryStoryStyles.authorInfo}>
              <Text style={culinaryStoryStyles.authorName}>
                {storyDetail.author.name}
              </Text>
              <Text style={culinaryStoryStyles.authorBio}>
                {storyDetail.author.bio}
              </Text>
              <Text style={culinaryStoryStyles.authorFollowers}>
                {storyDetail.author.followers} ng∆∞·ªùi theo d√µi
              </Text>
            </View>
            <TouchableOpacity
              style={culinaryStoryStyles.followButton}
              onPress={handleFollowAuthor}
            >
              <Text style={culinaryStoryStyles.followButtonText}>Theo d√µi</Text>
            </TouchableOpacity>
          </View>

          {/* Publish Date */}
          <Text style={culinaryStoryStyles.publishDate}>
            Xu·∫•t b·∫£n {storyDetail.publishDate}
          </Text>

          {/* Content */}
          <View style={culinaryStoryStyles.contentSection}>
            <Text style={culinaryStoryStyles.fullContent}>
              {storyDetail.fullContent}
            </Text>
          </View>

          {/* Tags */}
          <View style={culinaryStoryStyles.tagsSection}>
            <Text style={culinaryStoryStyles.tagsTitle}>Th·∫ª:</Text>
            <View style={culinaryStoryStyles.tagsContainer}>
              {storyDetail.tags.map((tag, index) => (
                <View key={index} style={culinaryStoryStyles.tag}>
                  <Text style={culinaryStoryStyles.tagText}>#{tag}</Text>
                </View>
              ))}
            </View>
          </View>

          {/* Action Buttons */}
          <View style={culinaryStoryStyles.actionSection}>
            <TouchableOpacity
              style={[
                culinaryStoryStyles.actionButton,
                isLiked && culinaryStoryStyles.likedButton,
              ]}
              onPress={handleLike}
            >
              <Text
                style={[
                  culinaryStoryStyles.actionButtonText,
                  isLiked && culinaryStoryStyles.likedButtonText,
                ]}
              >
                {isLiked ? "‚ù§Ô∏è ƒê√£ th√≠ch" : "ü§ç Th√≠ch"}
              </Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={culinaryStoryStyles.actionButton}
              onPress={handleShare}
            >
              <Text style={culinaryStoryStyles.actionButtonText}>
                üì§ Chia s·∫ª
              </Text>
            </TouchableOpacity>
          </View>

          {/* Related Stories */}
          <View style={culinaryStoryStyles.relatedSection}>
            <Text style={culinaryStoryStyles.relatedTitle}>
              üìö B√†i vi·∫øt li√™n quan
            </Text>
            {relatedStories.map((story) => (
              <TouchableOpacity
                key={story.id}
                style={culinaryStoryStyles.relatedStoryCard}
                onPress={() => handleRelatedStoryPress(story.id)}
              >
                <Image
                  source={{ uri: story.image }}
                  style={culinaryStoryStyles.relatedStoryImage}
                />
                <View style={culinaryStoryStyles.relatedStoryInfo}>
                  <Text style={culinaryStoryStyles.relatedStoryTitle}>
                    {story.title}
                  </Text>
                  <Text style={culinaryStoryStyles.relatedStoryReadTime}>
                    {story.readTime}
                  </Text>
                </View>
                <Text style={culinaryStoryStyles.relatedStoryArrow}>‚Üí</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>
    </View>
  );
};

export default CulinaryStoryDetailScreen;
